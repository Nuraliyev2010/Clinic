# Generated by Django 4.2.4 on 2023-10-18 08:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cassa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=8, verbose_name='Kassa parolini kiriting :')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Casssa balanci :')),
            ],
            options={
                'verbose_name': 'Cassa',
                'verbose_name_plural': 'Cassa',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Ismi :')),
                ('phone', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_number', message='Invalid phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')])),
                ('describtion', models.CharField(blank=True, max_length=250, null=True, verbose_name='Hodimning tasnifi :')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_time', models.DateTimeField(verbose_name='Hodimning ish boshlash vaqti :')),
                ('end_time', models.DateTimeField(verbose_name='Hodimning ish vaqtining tugashi :')),
                ('specialty', models.CharField(blank=True, max_length=10, null=True, verbose_name='Hodimning mutaxassisligi')),
                ('status_employee', models.IntegerField(choices=[(1, 'Doctor'), (2, 'Admin'), (3, 'Work manager')], verbose_name='Ishchilar statusi :')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employee',
            },
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Nomi :')),
                ('about', models.TextField(verbose_name='Klinika haqida :')),
                ('employee_number', models.IntegerField(default=0, verbose_name='Ishchilar soni :')),
                ('patient_number_healing', models.IntegerField(verbose_name='Shifo topganlar soni :')),
            ],
            options={
                'verbose_name': 'Info',
                'verbose_name_plural': 'Info',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='patient/', verbose_name='Bemorning rasmi :')),
                ('phone', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_number', message='Invalid phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Bemor honasining yaratilgan vaqti :')),
                ('diagnos', models.CharField(max_length=100, verbose_name='Tashxisi :')),
                ('day', models.DateField(auto_now=True, verbose_name='Bemorning honadagi kuni :')),
                ('status_gender', models.IntegerField(choices=[(1, 'Famele'), (2, 'Male')], verbose_name='Bemorning jinsi :')),
                ('doctor', models.ManyToManyField(blank=True, to='main.employee', verbose_name='Bemorning doctori :')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patient',
            },
        ),
        migrations.CreateModel(
            name='Private_room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=50, verbose_name='Hodim honasining nomi (Masalan: Kardiologiya) :')),
                ('room_number', models.IntegerField(verbose_name='Hodim honasining raqami :')),
            ],
            options={
                'verbose_name': 'Private_room',
                'verbose_name_plural': 'Private_room',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('income', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Kiruvchi mablag` :')),
                ('expence', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Chiquvchi mablag` :')),
                ('description', models.CharField(max_length=255, verbose_name='Hisobot :')),
                ('date', models.DateField(auto_now=True, verbose_name='Sanasi :')),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Report',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Bo`limi :')),
            ],
            options={
                'verbose_name': 'Section',
                'verbose_name_plural': 'Section',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Honaning nomi :')),
                ('is_free', models.BooleanField(default=True, verbose_name='Hona bo`sh / band :')),
                ('capacity', models.IntegerField(default=0, verbose_name='Honaning sig`imi :')),
                ('price', models.IntegerField(verbose_name='Hona narxi :')),
                ('status', models.IntegerField(choices=[(1, 'Patient'), (2, 'Employee')], verbose_name='Hona statusi :')),
                ('category', models.IntegerField(choices=[(1, 'Lux'), (2, 'Econom'), (3, 'Operatsiya')], verbose_name='Hona bo`limi :')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.section', verbose_name='Bo`limi :')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Room',
            },
        ),
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0, verbose_name='Navbat soni :')),
                ('description', models.CharField(max_length=255, verbose_name='Tasnifi :')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Navbat yaratilishi :')),
                ('doctor', models.ManyToManyField(to='main.employee')),
            ],
            options={
                'verbose_name': 'Queue',
                'verbose_name_plural': 'Queue',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_created=True, verbose_name='Yaratilgan :')),
                ('total', models.IntegerField(verbose_name='Summa :')),
                ('description', models.TextField(null=True, verbose_name='Tasnifi :')),
                ('cod', models.CharField(max_length=25, unique=True, verbose_name='Code :')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.patient', verbose_name='Bemor :')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payment',
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('durationtime', models.TimeField(verbose_name='Operatsiya davomiyligi :')),
                ('time', models.DateTimeField(verbose_name='Operatsiya vaqti :')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('doctor', models.ManyToManyField(to='main.employee', verbose_name='Bemorni operatsiya qiluvchi doctor :')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.patient', verbose_name='Bemor :')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.room', verbose_name='Opertsiya honasini belgilang :')),
            ],
            options={
                'verbose_name': 'Operation',
                'verbose_name_plural': 'Operation',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='private_room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.private_room', verbose_name='Hodimning honasi :'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.employee', verbose_name='Doctorning ismi :')),
            ],
            options={
                'verbose_name': 'Attendance',
                'verbose_name_plural': 'Attendance',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_number', message='Invalid phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')])),
                ('adress', models.CharField(max_length=50, verbose_name='manzil')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
